name: Go test coverage check

on:
  pull_request:
    paths:
      - 'backend/**'

env:
  HEADLAMP_RUN_INTEGRATION_TESTS: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
    
      - uses: actions/setup-go@v3
        with:
          go-version: 1.20
    
      - name: Install dependencies
        run: |
          cd backend
          go mod download
    
      - name: Start cluster
        uses: medyagh/setup-minikube@master

      - name: Check cluster status 
        run: |
          minikube status

      - name: Enable headlamp addon
        run: |
          minikube addons enable headlamp

      - name: Try the cluster!
        run: kubectl get pods -A
        
      - name: Run tests and calculate code coverage
        run: |
          cd backend
          go test ./... -coverprofile=coverage.out -covermode=atomic -coverpkg=./...
          testcoverage=$(go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+')
          echo "Code coverage: $testcoverage"
          echo "Code coverage::set-output name=coverage::$testcoverage"
        shell: bash

      - name: Get base branch code coverage
        run: |
          cd backend
          base_branch="${{ github.base_ref }}"
          if [ "$base_branch" = "main" ]; then
            base_coverage="$testcoverage"
          else
            git fetch origin "$base_branch"
            git checkout "origin/$base_branch"
            go test ./... -coverprofile=base_coverage.out -covermode=atomic -coverpkg=./...
            base_coverage=$(go tool cover -func=base_coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+')
          fi
          echo "Base branch code coverage: $base_coverage"
          echo "Base branch code coverage::set-output name=base_coverage::$base_coverage"
        shell: bash

      - name: Compare code coverage
        run: |
          testcoverage="${{ steps.code-coverage.outputs.coverage }}"
          base_coverage="${{ steps.get-base-branch-code-coverage.outputs.base_coverage }}"
          coverage_diff=$(echo "$testcoverage - $base_coverage" | bc)
          echo "Coverage change: $coverage_diff"
          echo "Coverage change::set-output name=coverage_diff::$coverage_diff"
        shell: bash

      - name: Comment on PR
        run: |
          testcoverage="${{ steps.code-coverage.outputs.coverage }}"
          base_coverage="${{ steps.get-base-branch-code-coverage.outputs.base_coverage }}"
          coverage_diff="${{ steps.compare-code-coverage.outputs.coverage_diff }}"
          comment="Code coverage changed from $base_coverage% to $testcoverage%. Change: $coverage_diff%."

          gh issue comment ${GITHUB_REF} --body "${comment}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}